name: Django CI

on:
  push:
    branches: ['CI/CD', 'dev']
  pull_request:
    branches: ['dev']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.10.6, 3.11, 3.12]

    env:
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
      S3_SECRET_ACCESS_KEY: ${{secrets.S3_SECRET_ACCESS_KEY}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_REMOTE_HOST: ${{secrets.DB_REMOTE_HOST}}
      DB_REMOTE_PW: ${{secrets.DB_REMOTE_PW}}
      DB_REMOTE_USERNAME: ${{secrets.DB_REMOTE_USERNAME}}
      BUCKET_NAME: ${{secrets.BUCKET_NAME}}

    steps:
      - uses: actions/checkout@v3
      - name: 파이썬 ${{ matrix.python-version }} 설치
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: MySQL 설치 및 실행
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '8.0'
          mysql database: ${{env.DB_NAME}}
          mysql root password: ${{env.DB_REMOTE_PW}}
          character set server: 'utf8mb4'
          collation server: 'utf8mb4_general_ci'

      - name: 모듈 설치
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install binutils libproj-dev gdal-bin

      - name: DB 작성
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: 배포
        uses: appleboy/ssh-action@master
        continue-on-error: false
        with:
          host: ${{env.DB_REMOTE_HOST}}
          username: ${{env.DB_REMOTE_USERNAME}}
          password: ${{env.DB_REMOTE_PW}}
          script: |
            set -e
            cd Backend/
            git pull
            pip install -r requirements.txt
            python manage.py makemigrations
            python manage.py migrate
            python manage.py collectstatic --noinput
            gunicorn running_mate.wsgi:application -b 0.0.0.0:8000
