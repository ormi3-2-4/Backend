# Generated by Django 5.0 on 2023-12-12 05:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="태그 이름", max_length=255)),
            ],
            options={
                "db_table": "tags",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(help_text="운동 코스 제목", max_length=255)),
                ("content", models.TextField(help_text="운동 코스 내용")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="생성 날짜 및 시간"),
                ),
                ("view_count", models.PositiveIntegerField(default=0, help_text="조회수")),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="작성자",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        help_text="좋아요",
                        related_name="liked_courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        help_text="태그", related_name="courses", to="course.tag"
                    ),
                ),
            ],
            options={
                "db_table": "courses",
            },
        ),
    ]
